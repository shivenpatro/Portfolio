(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[823],{1823:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>y});var r=t(6482),o=t(2682),a=t(4571),c=t(8727),s=t(7077),i=t(7632),l=t(8984),g=t(4818);t(4317);let v=e=>{let{children:n}=e;return(0,r.jsx)(s.Hl,{dpr:[1,2],frameloop:"always",className:"beams-container",children:n})},f=e=>{let n=e.replace("#",""),t=parseInt(n.substring(0,2),16);return[t/255,parseInt(n.substring(2,4),16)/255,parseInt(n.substring(4,6),16)/255]},u=(0,o.forwardRef)((e,n)=>{let{material:t,width:a,count:s,height:l}=e,g=(0,o.useRef)(null);(0,o.useImperativeHandle)(n,()=>g.current);let v=(0,o.useMemo)(()=>(function(e,n,t,r,o){let a=new c.LoY,s=202*e,i=new Float32Array(3*s),l=new Uint32Array(600*e),g=new Float32Array(2*s),v=0,f=0,u=0,x=-(e*n+(e-1)*0)/2;for(let r=0;r<e;r++){let e=x+r*(n+0),a=300*Math.random(),c=300*Math.random();for(let r=0;r<=o;r++){let s=t*(r/o-.5),x=[e,s,0],d=[e+n,s,0];i.set([...x,...d],3*v);let y=r/o;if(g.set([a,y+c,a+1,y+c],u),r<o){let e=v,n=v+1,t=v+2,r=v+3;l.set([e,n,t,t,n,r],f),f+=6}v+=2,u+=4}}return a.setAttribute("position",new c.THS(i,3)),a.setAttribute("uv",new c.THS(g,2)),a.setIndex(new c.THS(l,1)),a.computeVertexNormals(),a})(s,a,l,0,100),[s,a,l]);return(0,i.C)((e,n)=>{g.current&&(g.current.material.uniforms.time.value+=.1*n)}),(0,r.jsx)("mesh",{ref:g,geometry:v,material:t})});u.displayName="MergedPlanes";let x=(0,o.forwardRef)((e,n)=>(0,r.jsx)(u,{ref:n,...e}));x.displayName="PlaneNoise";let d=e=>{let{position:n,color:t}=e,a=(0,o.useRef)(null);return(0,o.useEffect)(()=>{if(!a.current)return;let e=a.current.shadow.camera;e&&(e.top=24,e.bottom=-24,e.left=-24,e.right=24,e.far=64,a.current.shadow.bias=-.004)},[]),(0,r.jsx)("directionalLight",{ref:a,color:t,intensity:1,position:n,castShadow:!0})},y=e=>{let{beamWidth:n=2,beamHeight:t=15,beamNumber:s=12,lightColor:i="#ffffff",speed:u=2,noiseIntensity:y=1.75,scale:m=.2,rotation:p=0}=e,z=(0,o.useRef)(null),P=(0,o.useMemo)(()=>(function(e,n){var t,r,o,s,i,l;let{vertexShader:g,fragmentShader:v,uniforms:f}=a.ShaderLib.physical,u=c.LlO.clone(f),x=new e(n.material||{});"color"in x&&(u.diffuse.value=x.color),"roughness"in x&&(u.roughness.value=x.roughness),"metalness"in x&&(u.metalness.value=x.metalness),"envMap"in x&&(u.envMap.value=x.envMap),"envMapIntensity"in x&&(u.envMapIntensity.value=x.envMapIntensity),Object.entries(null!==(r=n.uniforms)&&void 0!==r?r:{}).forEach(e=>{let[n,t]=e;u[n]=null!==t&&"object"==typeof t&&"value"in t?t:{value:t}});let d="".concat(n.header,"\n").concat(null!==(o=n.vertexHeader)&&void 0!==o?o:"","\n").concat(g),y="".concat(n.header,"\n").concat(null!==(s=n.fragmentHeader)&&void 0!==s?s:"","\n").concat(v);for(let[e,t]of Object.entries(null!==(i=n.vertex)&&void 0!==i?i:{}))d=d.replace(e,"".concat(e,"\n").concat(t));for(let[e,t]of Object.entries(null!==(l=n.fragment)&&void 0!==l?l:{}))y=y.replace(e,"".concat(e,"\n").concat(t));return new c.BKk({uniforms:u,vertexShader:d,fragmentShader:y,lights:!0,fog:!!(null===(t=n.material)||void 0===t?void 0:t.fog)})})(c._4j,{header:"\n  varying vec3 vEye;\n  varying float vNoise;\n  varying vec2 vUv;\n  varying vec3 vPosition;\n  uniform float time;\n  uniform float uSpeed;\n  uniform float uNoiseIntensity;\n  uniform float uScale;\n  ".concat("\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) +\n           (c - a)* u.y * (1.0 - u.x) +\n           (d - b) * u.x * u.y;\n}\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P);\n  vec3 Pi1 = Pi0 + vec3(1.0);\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P);\n  vec3 Pf1 = Pf0 - vec3(1.0);\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));\n  g000 *= norm0.x; g010 *= norm0.y; g100 *= norm0.z; g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));\n  g001 *= norm1.x; g011 *= norm1.y; g101 *= norm1.z; g111 *= norm1.w;\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x,Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x,Pf1.y,Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy,Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy,Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x,Pf0.y,Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x,Pf1.yz));\n  float n111 = dot(g111, Pf1);\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy,n_z.zw,fade_xyz.y);\n  float n_xyz = mix(n_yz.x,n_yz.y,fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n"),vertexHeader:"\n  float getPos(vec3 pos) {\n    vec3 noisePos =\n      vec3(pos.x * 0., pos.y - uv.y, pos.z + time * uSpeed * 3.) * uScale;\n    return cnoise(noisePos);\n  }\n  vec3 getCurrentPos(vec3 pos) {\n    vec3 newpos = pos;\n    newpos.z += getPos(pos);\n    return newpos;\n  }\n  vec3 getNormal(vec3 pos) {\n    vec3 curpos = getCurrentPos(pos);\n    vec3 nextposX = getCurrentPos(pos + vec3(0.01, 0.0, 0.0));\n    vec3 nextposZ = getCurrentPos(pos + vec3(0.0, -0.01, 0.0));\n    vec3 tangentX = normalize(nextposX - curpos);\n    vec3 tangentZ = normalize(nextposZ - curpos);\n    return normalize(cross(tangentZ, tangentX));\n  }",fragmentHeader:"",vertex:{"#include <begin_vertex>":"transformed.z += getPos(transformed.xyz);","#include <beginnormal_vertex>":"objectNormal = getNormal(position.xyz);"},fragment:{"#include <dithering_fragment>":"\n    float randomNoise = noise(gl_FragCoord.xy);\n    gl_FragColor.rgb -= randomNoise / 15. * uNoiseIntensity;"},material:{fog:!0},uniforms:{diffuse:new c.Q1f(...f("#000000")),time:{shared:!0,mixed:!0,linked:!0,value:0},roughness:.3,metalness:.3,uSpeed:{shared:!0,mixed:!0,linked:!0,value:u},envMapIntensity:10,uNoiseIntensity:y,uScale:m}}),[u,y,m]);return(0,r.jsxs)(v,{children:[(0,r.jsxs)("group",{rotation:[0,0,(0,g.pu)(p)],children:[(0,r.jsx)(x,{ref:z,material:P,count:s,width:n,height:t}),(0,r.jsx)(d,{color:i,position:[0,3,10]})]}),(0,r.jsx)("ambientLight",{intensity:1}),(0,r.jsx)("color",{attach:"background",args:["#000000"]}),(0,r.jsx)(l.u,{makeDefault:!0,position:[0,0,20],fov:30})]})}},4317:()=>{}}]);